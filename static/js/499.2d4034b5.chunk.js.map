{"version":3,"file":"static/js/499.2d4034b5.chunk.js","mappings":"qQAEaA,EAAcC,EAAAA,EAAAA,GAAH,6CAIXC,EAAkBD,EAAAA,EAAAA,GAAH,gDAIfE,EAAeF,EAAAA,EAAAA,GAAH,uFAMZG,EAAcH,EAAAA,EAAAA,EAAH,uF,SCyBxB,EA9BgB,WACd,OAAwCI,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAC5BR,EAAgBQ,EAAKC,SACrBL,GAAa,EACd,GACF,GAAE,CAACH,KAGF,UAACR,EAAD,WACGU,IAAa,SAACO,EAAA,EAAD,IACbX,EAAaY,OAAS,EACrBZ,EAAaa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACf,UAACpB,EAAD,YACE,SAACC,EAAD,UAAeiB,KACf,SAAChB,EAAD,UAAciB,MAFMC,EADP,KAOjB,8DAIP,C,mMCrCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASX,MAFS,2CAAH,qDAKXY,EAAe,mCAAG,WAAMnB,GAAN,uFACNe,EAAAA,EAAAA,IAAA,gBACZf,EADY,oBACOgB,EADP,oBADM,cACvBE,EADuB,yBAItBA,EAASX,MAJa,2CAAH,sDAOfa,EAAe,mCAAG,WAAMpB,GAAN,uFACNe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAASX,MAJa,2CAAH,sDAOfF,EAAe,mCAAG,WAAML,GAAN,uFACNe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAASX,MAJa,2CAAH,sDAOfc,EAAS,mCAAG,WAAMC,GAAN,uFACAP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAF9D,cACjBJ,EADiB,yBAIhBA,EAASX,MAJO,2CAAH,qD","sources":["pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx","services/fetchMovies .js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  margin-top: 12px;\n`;\n\nexport const ReviewsListItem = styled.li`\n  margin-bottom: 12px;\n`;\n\nexport const ReviewsTitle = styled.h3`\n  margin-bottom: 8px;\n  font-weight: 600;\n  color: #474747;\n`;\n\nexport const ReviewsText = styled.p`\n  font-weight: 400;\n  font-style: italic;\n  color: #474747;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchMovies ';\nimport { LoaderSpinner } from 'components/LoaderSpinner/LoaderSpinner';\nimport {\n  ReviewsList,\n  ReviewsListItem,\n  ReviewsTitle,\n  ReviewsText,\n} from 'pages/Reviews/Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieReviews(movieId).then(data => {\n      setMovieReviews(data.results);\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <ReviewsList>\n      {isLoading && <LoaderSpinner />}\n      {movieReviews.length > 0 ? (\n        movieReviews.map(({ author, content, id }) => (\n          <ReviewsListItem key={id}>\n            <ReviewsTitle>{author}</ReviewsTitle>\n            <ReviewsText>{content}</ReviewsText>\n          </ReviewsListItem>\n        ))\n      ) : (\n        <li>Something will appear here soon</li>\n      )}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'a148ed5961285512fd3954af576af4a0';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n"],"names":["ReviewsList","styled","ReviewsListItem","ReviewsTitle","ReviewsText","useState","movieReviews","setMovieReviews","movieId","useParams","isLoading","setIsLoading","useEffect","getMovieReviews","then","data","results","LoaderSpinner","length","map","author","content","id","axios","API_KEY","getTrending","response","getMovieDetails","getMovieCredits","getMovies","query"],"sourceRoot":""}