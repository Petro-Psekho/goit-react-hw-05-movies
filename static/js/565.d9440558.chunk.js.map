{"version":3,"file":"static/js/565.d9440558.chunk.js","mappings":"iRAEaA,EAAWC,EAAAA,EAAAA,GAAH,sPAYRC,EAAeD,EAAAA,EAAAA,GAAH,uHAMZE,EAAgBF,EAAAA,EAAAA,IAAH,8CAIbG,EAAYH,EAAAA,EAAAA,GAAH,uFAMTI,EAAYJ,EAAAA,EAAAA,EAAH,sF,SCwBtB,EAtCa,WACX,OAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAC5BR,EAAgBQ,GAChBJ,GAAa,EACd,GACF,GAAE,CAACH,KAGF,UAACT,EAAD,WACGW,IAAa,SAACM,EAAA,EAAD,IACbV,EAAaW,MACZX,EAAaW,KAAKC,QAClBZ,EAAaW,KAAKE,KAAI,SAAAC,GAAO,OAC3B,UAACnB,EAAD,YACE,gBACEoB,IACED,EAAQE,aAAR,UAzBO,8BAyBP,OAxBW,UAwBX,OAC6CF,EAAQE,cADrD,UAEOC,GAETC,IAAKJ,EAAQK,aAEf,UAACvB,EAAD,YACE,SAACC,EAAD,UAAYiB,EAAQM,QACpB,SAACtB,EAAD,UAAYgB,EAAQK,iBAXLL,EAAQO,GADA,MAkBpC,C,mMClDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAAShB,MAFS,2CAAH,qDAKXiB,EAAe,mCAAG,WAAMxB,GAAN,uFACNoB,EAAAA,EAAAA,IAAA,gBACZpB,EADY,oBACOqB,EADP,oBADM,cACvBE,EADuB,yBAItBA,EAAShB,MAJa,2CAAH,sDAOfF,EAAe,mCAAG,WAAML,GAAN,uFACNoB,EAAAA,EAAAA,IAAA,gBACZpB,EADY,4BACeqB,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAAShB,MAJa,2CAAH,sDAOfkB,EAAe,mCAAG,WAAMzB,GAAN,uFACNoB,EAAAA,EAAAA,IAAA,gBACZpB,EADY,4BACeqB,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAAShB,MAJa,2CAAH,sDAOfmB,EAAS,mCAAG,WAAMC,GAAN,uFACAP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAF9D,cACjBJ,EADiB,yBAIhBA,EAAShB,MAJO,2CAAH,qD","sources":["pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx","services/fetchMovies .js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(154px, 1fr));\n  grid-gap: 12px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastListItem = styled.li`\n  border-radius: 2px;\n  border: 1px solid #ccc;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n`;\n\nexport const ActorNameWrap = styled.div`\n  padding: 10px 8px;\n`;\n\nexport const ActorName = styled.h4`\n  margin-bottom: 4px;\n  font-weight: 600;\n  color: #474747;\n`;\n\nexport const ActorChar = styled.p`\n  font-weight: 400;\n  font-style: italic;\n  color: orange;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/fetchMovies ';\nimport { LoaderSpinner } from 'components/LoaderSpinner/LoaderSpinner';\nimport noImage from 'img/stub.jpg';\nimport {\n  CastList,\n  CastListItem,\n  ActorNameWrap,\n  ActorName,\n  ActorChar,\n} from 'pages/Cast/Cast.styled';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p';\nconst IMAGE_POSTER_SIZES = '/w154/';\n\nconst Cast = () => {\n  const [movieCredits, setMovieCredits] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieCredits(movieId).then(data => {\n      setMovieCredits(data);\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {isLoading && <LoaderSpinner />}\n      {movieCredits.cast &&\n        movieCredits.cast.length &&\n        movieCredits.cast.map(credits => (\n          <CastListItem key={credits.id}>\n            <img\n              src={\n                credits.profile_path\n                  ? `${IMAGE_BASE_URL}${IMAGE_POSTER_SIZES}${credits.profile_path}`\n                  : `${noImage}`\n              }\n              alt={credits.character}\n            />\n            <ActorNameWrap>\n              <ActorName>{credits.name}</ActorName>\n              <ActorChar>{credits.character}</ActorChar>\n            </ActorNameWrap>\n          </CastListItem>\n        ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'a148ed5961285512fd3954af576af4a0';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n"],"names":["CastList","styled","CastListItem","ActorNameWrap","ActorName","ActorChar","useState","movieCredits","setMovieCredits","movieId","useParams","isLoading","setIsLoading","useEffect","getMovieCredits","then","data","LoaderSpinner","cast","length","map","credits","src","profile_path","noImage","alt","character","name","id","axios","API_KEY","getTrending","response","getMovieDetails","getMovieReviews","getMovies","query"],"sourceRoot":""}