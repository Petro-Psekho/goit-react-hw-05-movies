{"version":3,"file":"static/js/134.013ba091.chunk.js","mappings":"gOAgEA,UAzDe,WACb,OAKIA,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAGF,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,IAILK,EAAAA,EAAAA,IAAUL,GACPM,MAAK,SAAAC,GACJX,EAAgBW,EAAKC,QACtB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACV,IAUJ,OACE,6BACE,kBAAMa,SAAUvB,GAVH,SAAAiB,GACfA,EAAOO,OAAOC,OAAOR,GAErBR,EAAgB,CAAEC,MAAOO,IAEzBd,GACD,IAIG,WACE,0BAAOuB,aAAa,OAAU3B,EAAS,QAAS,CAAE4B,UAAU,MAE3D1B,EAAOS,QAAS,sDAEjB,mBAAQkB,KAAK,SAAb,wBAGF,wBACGvB,EAAawB,KAAI,SAAAC,GAAK,OACrB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAxC,UACE,uBAAIkB,EAAMK,WAFLL,EAAME,GADM,QAU9B,C,mMC5DDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAAStB,MAFS,2CAAH,qDAKXuB,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,oBACOJ,EADP,oBADM,cACvBE,EADuB,yBAItBA,EAAStB,MAJa,2CAAH,sDAOfyB,EAAe,mCAAG,WAAMD,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeJ,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAAStB,MAJa,2CAAH,sDAOf0B,EAAe,mCAAG,WAAMF,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeJ,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAAStB,MAJa,2CAAH,sDAOfF,EAAS,mCAAG,WAAML,GAAN,uFACA0B,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8D3B,IAF9D,cACjB6B,EADiB,yBAIhBA,EAAStB,MAJO,2CAAH,qD","sources":["pages/Movies.jsx","services/fetchMovies .js"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useEffect, useState } from 'react';\n\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\n\nimport { getMovies } from 'services/fetchMovies ';\n\nconst Movies = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    getMovies(query)\n      .then(data => {\n        setSearchMovies(data.results);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  const onSubmit = data => {\n    data = Object.values(data);\n\n    setSearchParams({ query: data });\n\n    reset();\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input autoComplete=\"off\" {...register('query', { required: true })} />\n\n        {errors.query && <span>This field is required</span>}\n\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul>\n        {searchMovies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'a148ed5961285512fd3954af576af4a0';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n"],"names":["useForm","register","handleSubmit","errors","formState","reset","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getMovies","then","data","results","catch","error","console","log","onSubmit","Object","values","autoComplete","required","type","map","movie","to","id","state","from","title","axios","API_KEY","getTrending","response","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}