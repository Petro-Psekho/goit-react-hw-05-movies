{"version":3,"file":"static/js/736.4cf265be.chunk.js","mappings":"6MAmCA,UA9BgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAC5BR,EAAgBQ,EAAKC,SACrBL,GAAa,EACd,GACF,GAAE,CAACH,KAGF,0BACGE,IAAa,SAAC,IAAD,IACbJ,EAAaW,OAAS,EACrBX,EAAaY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACf,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADM,KAOjB,8DAIP,C,mMC/BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASV,MAFS,2CAAH,qDAKXW,EAAe,mCAAG,WAAMlB,GAAN,uFACNc,EAAAA,EAAAA,IAAA,gBACZd,EADY,oBACOe,EADP,oBADM,cACvBE,EADuB,yBAItBA,EAASV,MAJa,2CAAH,sDAOfY,EAAe,mCAAG,WAAMnB,GAAN,uFACNc,EAAAA,EAAAA,IAAA,gBACZd,EADY,4BACee,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAASV,MAJa,2CAAH,sDAOfF,EAAe,mCAAG,WAAML,GAAN,uFACNc,EAAAA,EAAAA,IAAA,gBACZd,EADY,4BACee,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAASV,MAJa,2CAAH,sDAOfa,EAAS,mCAAG,WAAMC,GAAN,uFACAP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAF9D,cACjBJ,EADiB,yBAIhBA,EAASV,MAJO,2CAAH,qD","sources":["pages/Reviews.jsx","services/fetchMovies .js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchMovies ';\nimport { LoaderSpinner } from 'components/LoaderSpinner/LoaderSpinner';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieReviews(movieId).then(data => {\n      setMovieReviews(data.results);\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <ul>\n      {isLoading && <LoaderSpinner />}\n      {movieReviews.length > 0 ? (\n        movieReviews.map(({ author, content, id }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <li>Something will appear here soon</li>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'a148ed5961285512fd3954af576af4a0';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n"],"names":["useState","movieReviews","setMovieReviews","movieId","useParams","isLoading","setIsLoading","useEffect","getMovieReviews","then","data","results","length","map","author","content","id","axios","API_KEY","getTrending","response","getMovieDetails","getMovieCredits","getMovies","query"],"sourceRoot":""}