{"version":3,"file":"static/js/493.718db99b.chunk.js","mappings":"6MA0CA,UAlCa,WACX,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BN,EAAgBM,EACjB,GACF,GAAE,CAACL,KAGF,0BACE,wBACGF,EAAaQ,MACZR,EAAaQ,KAAKC,QAClBT,EAAaQ,KAAKE,KAAI,SAAAC,GAAO,OAC3B,2BACE,gBACEC,IACED,EAAQE,aAAR,UAtBK,8BAsBL,OArBS,UAqBT,OAC6CF,EAAQE,cADrD,UAEOC,GAETC,IAAKJ,EAAQK,aAEf,wBAAKL,EAAQM,QACb,uBAAIN,EAAQK,cAVLL,EAAQO,GADU,OAiBtC,C,mMCtCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASf,MAFS,2CAAH,qDAKXgB,EAAe,mCAAG,WAAMrB,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,oBACOkB,EADP,oBADM,cACvBE,EADuB,yBAItBA,EAASf,MAJa,2CAAH,sDAOfF,EAAe,mCAAG,WAAMH,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACekB,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAASf,MAJa,2CAAH,sDAOfiB,EAAe,mCAAG,WAAMtB,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACekB,EADf,oBADM,cACvBE,EADuB,yBAItBA,EAASf,MAJa,2CAAH,sDAOfkB,EAAS,mCAAG,WAAMC,GAAN,uFACAP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAF9D,cACjBJ,EADiB,yBAIhBA,EAASf,MAJO,2CAAH,qD","sources":["pages/Cast.jsx","services/fetchMovies .js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/fetchMovies ';\nimport noImage from 'img/stub.jpg';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p';\nconst IMAGE_POSTER_SIZES = '/w154/';\n\nconst Cast = () => {\n  const [movieCredits, setMovieCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(data => {\n      setMovieCredits(data);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieCredits.cast &&\n          movieCredits.cast.length &&\n          movieCredits.cast.map(credits => (\n            <li key={credits.id}>\n              <img\n                src={\n                  credits.profile_path\n                    ? `${IMAGE_BASE_URL}${IMAGE_POSTER_SIZES}${credits.profile_path}`\n                    : `${noImage}`\n                }\n                alt={credits.character}\n              />\n              <h4>{credits.name}</h4>\n              <p>{credits.character}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'a148ed5961285512fd3954af576af4a0';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n"],"names":["useState","movieCredits","setMovieCredits","movieId","useParams","useEffect","getMovieCredits","then","data","cast","length","map","credits","src","profile_path","noImage","alt","character","name","id","axios","API_KEY","getTrending","response","getMovieDetails","getMovieReviews","getMovies","query"],"sourceRoot":""}