{"version":3,"file":"static/js/373.f152b154.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies .js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  color: #474747;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from 'components/BackLink/BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"20\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MainDetails = styled.main`\n  padding: 0 5px;\n`;\n\nexport const DetailsWrap = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n  padding: 16px 16px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2), 0 4px 6px rgba(0, 0, 0, 0.2);\n`;\n\nexport const PosterWrap = styled.div`\n  min-width: 300px;\n  margin-right: 16px;\n`;\n\nexport const PosterImage = styled.img`\n  border-radius: 2px;\n  box-shadow: 0 1px 4px rgba(92, 91, 91, 0.3),\n    -23px 0 20px -23px rgba(92, 91, 91, 0.6),\n    23px 0 20px -23px rgba(92, 91, 91, 0.6),\n    inset 0 0 40px rgba(92, 91, 91, 0.1);\n`;\n\nexport const DetailsTitle = styled.h2`\n  margin-bottom: 6px;\n  font-size: 30px;\n  font-weight: 400;\n  color: #474747;\n`;\n\nexport const DetailsScore = styled.p`\n  margin-bottom: 14px;\n  color: orange;\n`;\n\nexport const OverviewTitle = styled.h3`\n  margin-bottom: 6px;\n\n  font-weight: 600;\n  color: #474747;\n`;\n\nexport const OverviewText = styled.p`\n  margin-bottom: 14px;\n  font-style: italic;\n\n  font-weight: 400;\n  color: #474747;\n`;\n\nexport const GenresTitle = styled.h4`\n  margin-bottom: 6px;\n\n  font-weight: 600;\n  color: #474747;\n`;\n\nexport const GenresText = styled.span`\n  margin-right: 6px;\n  font-style: italic;\n\n  font-weight: 400;\n  color: #474747;\n`;\n\nexport const InfoWrap = styled.div`\n  margin-bottom: 20px;\n  padding: 16px 16px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2), 0 4px 6px rgba(0, 0, 0, 0.2);\n`;\n\nexport const InfoTitle = styled.h4`\n  padding-top: 10px;\n  margin-bottom: 16px;\n\n  font-weight: 600;\n  color: #474747;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n`;\n\nexport const InfoListItem = styled.li`\n  margin-right: 10px;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  border-radius: 4px;\n  overflow: hidden;\n\n  color: #474747;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2), 0 4px 6px rgba(0, 0, 0, 0.2);\n\n  :hover {\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n    transform: scale(1.03);\n    transition: transform 250ms;\n  }\n`;\n\nexport const InfoLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  width: 100px;\n  padding: 5px 10px;\n\n  text-decoration: none;\n  background-color: orange;\n\n  color: #ffffff;\n\n  :hover {\n    background-color: orangered;\n    transition: transform 250ms;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/fetchMovies ';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { LoaderSpinner } from 'components/LoaderSpinner/LoaderSpinner';\nimport {\n  MainDetails,\n  DetailsWrap,\n  PosterWrap,\n  PosterImage,\n  DetailsTitle,\n  DetailsScore,\n  OverviewTitle,\n  OverviewText,\n  GenresTitle,\n  GenresText,\n  InfoWrap,\n  InfoTitle,\n  InfoList,\n  InfoListItem,\n  InfoLink,\n} from 'pages/MovieDetails/MovieDetails.styled';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p';\nconst IMAGE_POSTER_SIZES = '/w342/';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(movieId).then(data => {\n      setMovieDetails(data);\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <MainDetails>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <DetailsWrap>\n        {isLoading && <LoaderSpinner />}\n        <PosterWrap>\n          {\n            <PosterImage\n              src={`${IMAGE_BASE_URL}${IMAGE_POSTER_SIZES}${movieDetails.poster_path}`}\n              alt={movieDetails.original_title}\n            />\n          }\n        </PosterWrap>\n        <div>\n          <DetailsTitle>{movieDetails.title}</DetailsTitle>\n          <DetailsScore>\n            User Score: {Math.round(movieDetails.vote_average * 10)}%\n          </DetailsScore>\n          <OverviewTitle>Overview</OverviewTitle>\n          <OverviewText>{movieDetails.overview}</OverviewText>\n          <GenresTitle>Genres</GenresTitle>\n          <div>\n            {movieDetails.genres &&\n              movieDetails.genres.length &&\n              movieDetails.genres.map(({ id, name }) => (\n                <GenresText key={id}> \"{name}\" </GenresText>\n              ))}\n          </div>\n        </div>\n      </DetailsWrap>\n      <InfoWrap>\n        <InfoTitle>Additional information</InfoTitle>\n        <InfoList>\n          <InfoListItem>\n            <InfoLink to=\"cast\" state={{ ...location.state }}>\n              Cast\n            </InfoLink>\n          </InfoListItem>\n          <InfoListItem>\n            <InfoLink to=\"reviews\" state={{ ...location.state }}>\n              Reviews\n            </InfoLink>\n          </InfoListItem>\n        </InfoList>\n\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </InfoWrap>\n    </MainDetails>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'a148ed5961285512fd3954af576af4a0';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","MainDetails","DetailsWrap","PosterWrap","PosterImage","DetailsTitle","DetailsScore","OverviewTitle","OverviewText","GenresTitle","GenresText","InfoWrap","InfoTitle","InfoList","InfoListItem","InfoLink","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","backLinkHref","state","from","isLoading","setIsLoading","useEffect","getMovieDetails","then","data","LoaderSpinner","src","poster_path","alt","original_title","title","Math","round","vote_average","overview","genres","length","map","id","name","Suspense","fallback","axios","API_KEY","getTrending","response","getMovieCredits","getMovieReviews","getMovies","query"],"sourceRoot":""}